name: PR Quality Checks

on:
  pull_request:
    types: [opened, edited, reopened, ready_for_review, synchronize]
  push:
    branches: [main, develop]

jobs:
  lint:
    name: "Lint code"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run lint

  pretty:
    name: "Check formatting"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run pretty:check

  typecheck:
    name: "Typecheck code"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run typecheck

  test:
    name: "Run unit tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run test

  discord:
    name: "Send Discord notification"
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - name: Send Discord message
        run: |
          REVIEWERS=$(echo '${{ toJson(github.event.pull_request.  requested_reviewers) }}' | jq -r '.[]?.login' | paste -sd " " -)
          if [ -z "$REVIEWERS" ]; then
             REVIEWERS="No reviewer"
          fi

          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{
           \"content\": \"âœ… New PR from branch \`${{ github.head_ref }}\` to \`${{ github.base_ref }}\`\nğŸ”— https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}\nğŸ‘¤ Commit by: ${{ github.event.pull_request.user.login }}\nğŸ“¦ Message: ${{ github.event.pull_request.title }}\nğŸ•’ At: ${{ github.event.pull_request.created_at }}\nğŸ‘€ Reviewer: ${REVIEWERS}\"
            }" \
           https://discordapp.com/api/webhooks/1377175599184871485/1ORCS4dJZ4hojiiMxQHyj3ozFQWIsm-3J8RRwIaU4DneR6dHbtC7YdBoTvA73DJbEWSa

  setup-config:
    name: "Setup config files"
    runs-on: ubuntu-latest
    steps:
      - name: Generate ESLint config for React + TypeScript
        run: |
          echo '{
            "parser": "@typescript-eslint/parser",
            "extends": [
              "eslint:recommended",
              "plugin:@typescript-eslint/recommended",
              "plugin:react/recommended",
              "plugin:react-hooks/recommended",
              "plugin:prettier/recommended"
            ],
            "plugins": ["react", "@typescript-eslint"],
            "parserOptions": {
              "ecmaVersion": 2020,
              "sourceType": "module",
              "ecmaFeatures": { "jsx": true }
            },
            "settings": { "react": { "version": "detect" } },
            "env": { "browser": true, "node": true, "es6": true },
            "rules": {}
          }' > .eslintrc.json

      - name: Generate Prettier config
        run: |
          echo '{
            "semi": true,
            "singleQuote": true,
            "printWidth": 100,
            "tabWidth": 2,
            "trailingComma": "es5"
          }' > .prettierrc
