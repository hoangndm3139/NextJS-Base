name: PR Quality Checks

on:
  pull_request:
    types: [opened, edited, reopened, ready_for_review, synchronize]
  push:
    branches: [main, develop]

jobs:
  setup:
    name: Setup & install dependencies
    runs-on: ubuntu-latest
    outputs:
      node-modules-path: ${{ steps.set-node-modules-path.outputs.path }}
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Set output for node_modules path
        id: set-node-modules-path
        run: echo "path=node_modules" >> "$GITHUB_OUTPUT"
  check-reviewers:
    name: "Check reviewers"
    runs-on: ubuntu-latest
    steps:
      - name: Ensure 2 reviewers are assigned
        uses: actions/github-script@v7
        with:
          script: |
            const reviewers = await github.rest.pulls.listRequestedReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const assigned = reviewers.data.users.length;
            if (assigned < 2) {
              core.setFailed(`❌ Cần ít nhất 2 reviewer (hiện có ${assigned})`);
            } else {
              core.info(`✅ Có đủ ${assigned} reviewer(s)`);
            }

  lint:
    name: "Lint code"
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run lint

  pretty:
    name: "Check formatting"
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run pretty:check

  typecheck:
    name: "Typecheck code"
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run typecheck

  test:
    name: "Run unit tests"
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run test

  discord:
    name: "Send Discord notification"
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - name: Send Discord message
        run: |
          REVIEWERS=$(echo '${{ toJson(github.event.pull_request.  requested_reviewers) }}' | jq -r '.[]?.login' | paste -sd " " -)
          if [ -z "$REVIEWERS" ]; then
             REVIEWERS="No reviewer"
          fi

          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{
           \"content\": \"✅ New PR from branch \`${{ github.head_ref }}\` to \`${{ github.base_ref }}\`\n🔗 https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}\n👤 Commit by: ${{ github.event.pull_request.user.login }}\n📦 Message: ${{ github.event.pull_request.title }}\n🕒 At: ${{ github.event.pull_request.created_at }}\n👀 Reviewer: ${REVIEWERS}\"
            }" \
           https://discordapp.com/api/webhooks/1376409380848926811/ZhcvLqLf5db07aCqhh3Vy6b9tQ-4nlqcdrRtzP3RkXOt1RvbQqbWK4Gcp7Q4vEROsuWw

  setup-config:
    name: "Setup config files"
    runs-on: ubuntu-latest
    steps:
      - name: Generate ESLint config for React + TypeScript
        run: |
          echo '{
            "parser": "@typescript-eslint/parser",
            "extends": [
              "eslint:recommended",
              "plugin:@typescript-eslint/recommended",
              "plugin:react/recommended",
              "plugin:react-hooks/recommended",
              "plugin:prettier/recommended"
            ],
            "plugins": ["react", "@typescript-eslint"],
            "parserOptions": {
              "ecmaVersion": 2020,
              "sourceType": "module",
              "ecmaFeatures": { "jsx": true }
            },
            "settings": { "react": { "version": "detect" } },
            "env": { "browser": true, "node": true, "es6": true },
            "rules": {}
          }' > .eslintrc.json

      - name: Generate Prettier config
        run: |
          echo '{
            "semi": true,
            "singleQuote": true,
            "printWidth": 100,
            "tabWidth": 2,
            "trailingComma": "es5"
          }' > .prettierrc
